CONFORMANCE WITH CORE REPOSITORY DOCUMENTS
This file inherits and must conform to:
- core/Repo_Mega_Prompt.txt
- core/World_Class_Blueprint.txt

Mandatory repository rules
- Respect battery only scope. Refer hardwired alarms to licensed electricians.
- Keep Google Sheets the initial system of record. Design a clean path to Postgres without breaking UI.
- Keep the route CLI and outputs stable while adding tests and reliability.
- Keep Apps Script deployable with clasp and allow TypeScript builds.
- Do not break existing report and invoice templates. Provide a safe migration script.

Output rules
- Use unified diffs and exact commands for PRs. Keep prose minimal and structured.
- ASCII only. No secrets in client or code.

PERFORMANCE_RELIABILITY - MEGA PROMPT
Date: 2025-09-03

Scope
Add observability, budgets, caching, retries, rate limits, and graceful degradation to meet SLOs.

Inheritance
- Read ../core/Repo_Mega_Prompt.txt and ../core/World_Class_Blueprint.txt first.
- Apply constraints, SLOs, and security rules. This prompt takes precedence where more specific.
- Respect Google Sheets as the initial system of record and keep the path open for Postgres.

Operating rules
1) One PR at a time with unified diffs and exact commands. No prose beyond the required sections.
2) Keep changes surgical and reversible. Include rollback notes if risky.
3) No secrets in client or code. Use environment variables and Script Properties.
4) Maintain ASCII only output.
5) Stop after producing diffs and commands for this PR.

Deliverables
- Structured logs with request IDs
- Metrics for route compute, cache hit rates, email and SMS delivery
- Caching layer for geocodes and OSRM tables with TTL
- Health, liveness, readiness checks and timeouts

Task routing within this principle
- Logging and correlation
- Metrics and alerting
- Caching and backpressure

PR plan
- PR 1: Add logging and request IDs with correlation in agent and gui
- PR 2: Add metrics exporters and counters for key flows
- PR 3: Implement caching for geocodes and OSRM tables with TTL and invalidation
- PR 4: Add health endpoints, retries, and backoff

Acceptance gates
- Logs, metrics visible in dev
- Cache reduces external calls by 60 percent plus under load
- Health endpoints return correct status

KPIs and budgets
- 99.9 percent monthly availability target met
- Error budget tracked and alerts configured

Risks and rollback
- Stale cache. Mitigate with TTL and invalidation
- Over logging. Mitigate with sampling and levels

Output format the agent must follow
- Section A: PR title and rationale
- Section B: Files changed list
- Section C: Unified diff
- Section D: Commands to apply and to run checks
- Section E: Rollback steps
- Section F: Acceptance checks to verify

Defaults when information is missing
- Choose best practice defaults from the core blueprint and prompts.
- Prefer reversible changes. Provide options when in doubt.
