CONFORMANCE WITH CORE REPOSITORY DOCUMENTS
This file inherits and must conform to:
- core/Repo_Mega_Prompt.txt
- core/World_Class_Blueprint.txt

Mandatory repository rules
- Respect battery only scope. Refer hardwired alarms to licensed electricians.
- Keep Google Sheets the initial system of record. Design a clean path to Postgres without breaking UI.
- Keep the route CLI and outputs stable while adding tests and reliability.
- Keep Apps Script deployable with clasp and allow TypeScript builds.
- Do not break existing report and invoice templates. Provide a safe migration script.

Output rules
- Use unified diffs and exact commands for PRs. Keep prose minimal and structured.
- ASCII only. No secrets in client or code.

DATA_API - MEGA PROMPT
Date: 2025-09-03

Scope
Define Sheet schemas and repository layer, stable API shapes, pagination, and idempotency with a path to Postgres.

Inheritance
- Read ../core/Repo_Mega_Prompt.txt and ../core/World_Class_Blueprint.txt first.
- Apply constraints, SLOs, and security rules. This prompt takes precedence where more specific.
- Respect Google Sheets as the initial system of record and keep the path open for Postgres.

Operating rules
1) One PR at a time with unified diffs and exact commands. No prose beyond the required sections.
2) Keep changes surgical and reversible. Include rollback notes if risky.
3) No secrets in client or code. Use environment variables and Script Properties.
4) Maintain ASCII only output.
5) Stop after producing diffs and commands for this PR.

Deliverables
- Schema definitions and validation for Sheets tabs
- Repository layer with typed models and mappers
- Public API endpoints and error codes

Task routing within this principle
- Schema and validation
- Repository patterns
- API versioning and pagination

PR plan
- PR 1: Add schema files for Sheets tabs with validation and migrate tool
- PR 2: Implement repository layer with typed models and mappers
- PR 3: Expose API endpoints with pagination and idempotency keys

Acceptance gates
- Schema documented and validated
- API versioned and stable with deprecation policy
- Idempotency on unsafe operations

KPIs and budgets
- API p95 under 300 ms for hot paths with cache
- Zero breaking changes without deprecation

Risks and rollback
- Schema drift. Mitigate with migrate scripts
- Unbounded payloads. Mitigate with pagination and limits

Output format the agent must follow
- Section A: PR title and rationale
- Section B: Files changed list
- Section C: Unified diff
- Section D: Commands to apply and to run checks
- Section E: Rollback steps
- Section F: Acceptance checks to verify

Defaults when information is missing
- Choose best practice defaults from the core blueprint and prompts.
- Prefer reversible changes. Provide options when in doubt.
